type Permission {
  id: ID
  action: String
  module: String
  created_at: String
  updated_at: String
}

input CreatePermissionInput {
  action: String
  module: String
}

input UpdatePermissionInput {
  entity_id: ID!
  data: CreatePermissionInput
}

input PermissionQuery {
  action: String
  module: String
  search_keyword: String
}

type PermissionQuerySchema {
  data: [Permission]
  meta_data: MetaData
}

extend type Query {
  getAPermission(entity_id: ID!): Permission @auth(roles: ["admin", "developer"])
  getPermissions(query: PermissionQuery, options: Options): PermissionQuerySchema @auth(roles: ["admin", "developer"])
}

extend type Mutation {
  createPermission(input: CreatePermissionInput!): Permission @auth(roles: ["admin", "developer"])
  updatePermission(input: UpdatePermissionInput!): Permission @auth(roles: ["admin", "developer"])
  deletePermission(entity_id: ID!): Permission @auth(roles: ["admin", "developer"])
}
