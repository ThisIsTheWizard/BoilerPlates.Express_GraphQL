type RolePermission {
  id: ID!
  role_id: String!
  permission_id: String!
  role: Role
  permission: Permission
  created_at: String!
  updated_at: String!
}

input AssignPermissionInput {
  role_id: ID!
  permission_id: ID!
}

extend type Query {
  getRolePermissions: [RolePermission!]! @auth(roles: ["admin", "developer"])
  getARolePermission(id: ID!): RolePermission @auth(roles: ["admin", "developer"])
  getRolePermissionsByRole(role_id: ID!): [RolePermission!]! @auth(roles: ["admin", "developer"])
}

extend type Mutation {
  assignPermission(input: AssignPermissionInput!): RolePermission! @auth(roles: ["admin", "developer"])
  removePermission(id: ID!): SuccessResponse! @auth(roles: ["admin", "developer"])
}
