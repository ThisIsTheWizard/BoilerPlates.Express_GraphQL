type RoleUser {
  id: ID
  role_id: String
  user_id: String
  role: Role
  user: User
  created_at: String
  updated_at: String
}

input AssignRoleInput {
  role_id: ID!
  user_id: ID!
}

extend type Query {
  getARoleUser(id: ID!): RoleUser @auth(roles: ["admin", "developer"])
  getRoleUsers: [RoleUser] @auth(roles: ["admin", "developer"])
  getUserRoles(user_id: ID!): [RoleUser] @auth(roles: ["admin", "developer"])
}

extend type Mutation {
  assignRole(input: AssignRoleInput!): RoleUser! @auth(roles: ["admin", "developer"])
  removeRole(id: ID!): SuccessResponse! @auth(roles: ["admin", "developer"])
}
